{"ast":null,"code":"export function getMetaValue(name) {\n  var element = findElement(document.head, \"meta[name=\\\"\".concat(name, \"\\\"]\"));\n\n  if (element) {\n    return element.getAttribute(\"content\");\n  }\n}\nexport function findElements(root, selector) {\n  if (typeof root == \"string\") {\n    selector = root;\n    root = document;\n  }\n\n  var elements = root.querySelectorAll(selector);\n  return toArray(elements);\n}\nexport function findElement(root, selector) {\n  if (typeof root == \"string\") {\n    selector = root;\n    root = document;\n  }\n\n  return root.querySelector(selector);\n}\nexport function dispatchEvent(element, type) {\n  var eventInit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var disabled = element.disabled;\n  var bubbles = eventInit.bubbles,\n      cancelable = eventInit.cancelable,\n      detail = eventInit.detail;\n  var event = document.createEvent(\"Event\");\n  event.initEvent(type, bubbles || true, cancelable || true);\n  event.detail = detail || {};\n\n  try {\n    element.disabled = false;\n    element.dispatchEvent(event);\n  } finally {\n    element.disabled = disabled;\n  }\n\n  return event;\n}\nexport function toArray(value) {\n  if (Array.isArray(value)) {\n    return value;\n  } else if (Array.from) {\n    return Array.from(value);\n  } else {\n    return [].slice.call(value);\n  }\n}\nexport function onDocumentReady(callback) {\n  if (document.readyState !== \"loading\") {\n    callback();\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", callback);\n  }\n}\nexport function removeElement(el) {\n  if (el && el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n}\nexport function insertAfter(el, referenceNode) {\n  return referenceNode.parentNode.insertBefore(el, referenceNode.nextSibling);\n}\nexport function getAuthenticityToken() {\n  return getMetaValue(\"csrf-token\");\n}\nexport function rFetch(resource) {\n  var _options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var options = Object.assign({}, _options);\n  setupHeaders();\n  setupContentType();\n  setupAccept();\n  setupCredentials();\n  return fetch(resource, options).then(checkStatus).then(parseResponse);\n\n  function setupHeaders() {\n    var headers = Object.assign({}, options.headers);\n    headers[\"X-CSRF-Token\"] = getAuthenticityToken();\n    headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n    options.headers = headers;\n  }\n\n  function setupContentType() {\n    if (options.contentType) options.headers[\"Content-Type\"] = options.contentType;\n  }\n\n  function setupAccept() {\n    if (options.as == \"json\") {\n      options.headers[\"Accept\"] = \"application/json\";\n    }\n\n    if (options.as == \"xhr\") {\n      options.headers[\"Accept\"] = \"text/javascript\";\n    }\n  }\n\n  function setupCredentials() {\n    options.credentials = options.credentials || \"same-origin\";\n  }\n\n  function checkStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response;\n    } else {\n      var error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }\n\n  function parseResponse(response) {\n    switch (options.as) {\n      case \"blob\":\n        return response.blob();\n\n      case \"json\":\n        return response.json();\n\n      default:\n        return response.text();\n    }\n  }\n}","map":{"version":3,"sources":["/home/matheuspuppe/Desktop/github/web_purple_stock/app/javascript/helpers.js"],"names":["getMetaValue","name","element","findElement","document","head","getAttribute","findElements","root","selector","elements","querySelectorAll","toArray","querySelector","dispatchEvent","type","eventInit","disabled","bubbles","cancelable","detail","event","createEvent","initEvent","value","Array","isArray","from","slice","call","onDocumentReady","callback","readyState","addEventListener","removeElement","el","parentNode","removeChild","insertAfter","referenceNode","insertBefore","nextSibling","getAuthenticityToken","rFetch","resource","_options","options","Object","assign","setupHeaders","setupContentType","setupAccept","setupCredentials","fetch","then","checkStatus","parseResponse","headers","contentType","as","credentials","response","status","error","Error","statusText","blob","json","text"],"mappings":"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","sourcesContent":["export function getMetaValue(name) {\n  const element = findElement(document.head, `meta[name=\"${name}\"]`)\n  if (element) {\n    return element.getAttribute(\"content\")\n  }\n}\n\nexport function findElements(root, selector) {\n  if (typeof root == \"string\") {\n    selector = root\n    root = document\n  }\n  const elements = root.querySelectorAll(selector)\n  return toArray(elements)\n}\n\nexport function findElement(root, selector) {\n  if (typeof root == \"string\") {\n    selector = root\n    root = document\n  }\n  return root.querySelector(selector)\n}\n\nexport function dispatchEvent(element, type, eventInit = {}) {\n  const { disabled } = element\n  const { bubbles, cancelable, detail } = eventInit\n  const event = document.createEvent(\"Event\")\n\n  event.initEvent(type, bubbles || true, cancelable || true)\n  event.detail = detail || {}\n\n  try {\n    element.disabled = false\n    element.dispatchEvent(event)\n  } finally {\n    element.disabled = disabled\n  }\n\n  return event\n}\n\nexport function toArray(value) {\n  if (Array.isArray(value)) {\n    return value\n  } else if (Array.from) {\n    return Array.from(value)\n  } else {\n    return [].slice.call(value)\n  }\n}\n\nexport function onDocumentReady(callback) {\n  if (document.readyState !== \"loading\") {\n      callback()\n  } else {\n      document.addEventListener(\"DOMContentLoaded\", callback)\n  }\n}\n\nexport function removeElement(el) {\n  if (el && el.parentNode) {\n    el.parentNode.removeChild(el)\n  }\n}\n\nexport function insertAfter(el, referenceNode) {\n  return referenceNode.parentNode.insertBefore(el, referenceNode.nextSibling)\n}\n\nexport function getAuthenticityToken() {\n  return getMetaValue(\"csrf-token\")\n}\n\nexport function rFetch(resource, _options = {}) {\n  const options = Object.assign({}, _options)\n  \n  setupHeaders()\n  setupContentType()\n  setupAccept()\n  setupCredentials()  \n  return fetch(resource, options).then(checkStatus).then(parseResponse)\n  \n  function setupHeaders() {\n    const headers = Object.assign({}, options.headers)\n    headers[\"X-CSRF-Token\"] = getAuthenticityToken()  \n    headers[\"X-Requested-With\"] = \"XMLHttpRequest\"\n    options.headers = headers\n  }\n  \n  function setupContentType() {  \n    if (options.contentType) options.headers[\"Content-Type\"] = options.contentType\n  }\n  \n  function setupAccept() {\n    if (options.as == \"json\") {\n      options.headers[\"Accept\"] = \"application/json\"\n    } \n    if (options.as == \"xhr\") {\n      options.headers[\"Accept\"] = \"text/javascript\"\n    }\n  }\n  \n  function setupCredentials() {\n    options.credentials = options.credentials || \"same-origin\"\n  }\n  \n  function checkStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response\n    } else {\n      const error = new Error(response.statusText)\n      error.response = response\n      throw error\n    }\n  }\n  \n  function parseResponse(response) {\n    switch (options.as) {\n      case \"blob\":\n        return response.blob();\n      case \"json\":\n        return response.json();\n      default:\n        return response.text()\n    }\n  }  \n}\n"]},"metadata":{},"sourceType":"module"}